README for Raspberry Pi Clock
-----------------------------

This package displays the current time (via NTP) and current outside temperature (via Weather Underground API) on an Adafruit 7 segment LED display. Since there is no real time clock involved, the time is only accurate while the Raspberry Pi is powered on and connected to the NTP server (private or public). It is most accurate when the NTP source has low drift. Time can be displayed in 12 or 24 hour format. Your local zip code can be configured for local temperature. Temperature info is displayed in Farenheit or Celsius, however the 7 segment display may not contain decimal characters so temperatures are rounded to the nearest integer. There is a watchdog script ('watchdog.sh') that runs in the background to ensure the clock script is started at boot and also is restarted if it crashes for any reason.

Requirements:
- Raspbery Pi (tested on RPi Model B, RPi 2, and RPi 3 using Raspbian, Raspbian Stretch, OSMC, and Volumio2)
- Assembled 7 Segment display w/I2C backpack from Adafruit (ex. https://www.adafruit.com/products/1270)
- Network connectivity on Raspberry Pi
- NTP servers configured on Raspberry Pi (/etc/ntp.conf)
- Local timezone configured on Raspberry Pi (use 'raspi-config')
- Python 2.7 installed on Raspberry Pi
- I2C enabled on Raspberry Pi (https://learn.adafruit.com/adafruits-raspberry-pi-lesson-4-gpio-setup/configuring-i2c)

Instructions:
1. Complete all the requirements above 
2. Update your Raspberry Pi ('sudo apt-get update' followed by 'sudo apt-get upgrade')
3. Install dependency packages ('sudo apt-get install build-essential python-dev python-smbus python-imaging curl') 
4. Run 'git clone https://github.com/gadkarisid/rpi-clock && cd rpi-clock && bash INSTALL'
5. Modify '/etc/rc.local' and add 'exec ~/watchdog.sh --silent &' before the 'exit 0' line.
6. Sign up for a free developer's API key with Weather Underground (https://www.wunderground.com/weather/api/)
7. Modify the user preferences in '/usr/bin/rpi-clock/clock.py'
8. Shutdown and power off the Raspberry Pi
9. Connect necessary GPIO pins to 7 segment display
10. Boot the Raspberry Pi

NOT FOR COMMERCIAL USE
